Index: src/main/java/ServerApp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Servlet.*;\r\nimport collections.UserCollection;\r\nimport models.User;\r\nimport org.eclipse.jetty.server.Server;\r\nimport org.eclipse.jetty.servlet.ServletContextHandler;\r\nimport org.eclipse.jetty.servlet.ServletHolder;\r\n\r\npublic class ServerApp {\r\n    public static void main(String[] args) throws Exception {\r\n        UserCollection user = new UserCollection();\r\n        Server server = new Server(2022);\r\n        ServletContextHandler handler = new ServletContextHandler();\r\n        handler.addServlet(new ServletHolder(new TestServlet()), \"/users\");\r\n        handler.addServlet(new ServletHolder(new PeopleListServlet()), \"/show\");\r\n        handler.addServlet(new ServletHolder(new LikePageServlet()), \"/likePage\");\r\n        handler.addServlet(new ServletHolder(new ChatServlet()), \"/chat\");\r\n        handler.addServlet(new ServletHolder(new LoginServlet()), \"/login\");\r\n        handler.addServlet(new ServletHolder(new StaticFileServlet()), \"/*\");\r\n        server.setHandler(handler);\r\n        server.start();\r\n        server.join();\r\n\r\n//        user.saved();\r\n//        System.out.println( user.save());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ServerApp.java b/src/main/java/ServerApp.java
--- a/src/main/java/ServerApp.java	(revision 46ead79aac2e7cc7fb8bacb9a1984ee990b9e156)
+++ b/src/main/java/ServerApp.java	(date 1666708490983)
@@ -7,19 +7,23 @@
 
 public class ServerApp {
     public static void main(String[] args) throws Exception {
-        UserCollection user = new UserCollection();
+        UserCollection userCollection = new UserCollection();
+        userCollection.save();
+
         Server server = new Server(2022);
         ServletContextHandler handler = new ServletContextHandler();
+        handler.addServlet(new ServletHolder(new LoginServlet()), "/login");
+
         handler.addServlet(new ServletHolder(new TestServlet()), "/users");
         handler.addServlet(new ServletHolder(new PeopleListServlet()), "/show");
         handler.addServlet(new ServletHolder(new LikePageServlet()), "/likePage");
         handler.addServlet(new ServletHolder(new ChatServlet()), "/chat");
-        handler.addServlet(new ServletHolder(new LoginServlet()), "/login");
+
         handler.addServlet(new ServletHolder(new StaticFileServlet()), "/*");
         server.setHandler(handler);
         server.start();
         server.join();
-
+        userCollection.addUser();
 //        user.saved();
 //        System.out.println( user.save());
     }
Index: src/main/java/collections/UserCollection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package collections;\r\n\r\nimport interfaces.UserDAO;\r\nimport models.User;\r\n\r\nimport java.sql.SQLException;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\npublic class UserCollection implements UserDAO {\r\n    static Map<Integer, User> userData = new HashMap<>();\r\n     User user = new User();\r\n    public static Map<Integer, User> save(){\r\n        userData.put(1, new User(\"cristiano.ronaldo@gmail.com\", \"123456\"));\r\n        userData.put(2, new User(\"leo.messi@gmail.com\", \"123456\"));\r\n        userData.put(3, new User(\"elon.musk@gmail.com\", \"123456\"));\r\n        userData.put(4, new User(\"selena.gomez@gmail.com\", \"123456\"));\r\n        return userData;\r\n    }\r\n    public void newUser() {\r\n        userData.put(user.id, new User(user.username, user.password));\r\n    }\r\n\r\n    @Override\r\n    public User get(int id) throws SQLException {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public List<User> getAll() throws SQLException {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public int save(User user) throws SQLException {\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public int insert(User user) throws SQLException {\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public int update(User user) throws SQLException {\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public int delete(User user) {\r\n        return 0;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/collections/UserCollection.java b/src/main/java/collections/UserCollection.java
--- a/src/main/java/collections/UserCollection.java	(revision 46ead79aac2e7cc7fb8bacb9a1984ee990b9e156)
+++ b/src/main/java/collections/UserCollection.java	(date 1666713318805)
@@ -8,47 +8,38 @@
 import java.util.List;
 import java.util.Map;
 
-public class UserCollection implements UserDAO {
-    static Map<Integer, User> userData = new HashMap<>();
-     User user = new User();
-    public static Map<Integer, User> save(){
-        userData.put(1, new User("cristiano.ronaldo@gmail.com", "123456"));
-        userData.put(2, new User("leo.messi@gmail.com", "123456"));
-        userData.put(3, new User("elon.musk@gmail.com", "123456"));
-        userData.put(4, new User("selena.gomez@gmail.com", "123456"));
-        return userData;
-    }
-    public void newUser() {
-        userData.put(user.id, new User(user.username, user.password));
+public class UserCollection {
+    public static Map<Integer, Map<String, String>> userData = new HashMap<>();
+
+
+    static User user = new User();
+    static Integer id = 0;
+
+    public static void save() {
+        user.loginPass.put("cristiano.ronaldo@gmail.com", "123456");
+        user.loginPass.put("leo.messi@gmail.com", "123456");
+        user.loginPass.put("elon.musk@gmail.com", "123456");
+        user.loginPass.put("selena.gomez@gmail.com", "123456");
+
+
+        for (Map.Entry<String, String> entry : user.loginPass.entrySet()) {
+            id++;
+            String key = entry.getKey();
+            String value = entry.getValue();
+
+            userData.put(id, new HashMap() {{
+                put(key, value);
+            }});
+
+        }
+        // System.out.println(userData);
     }
 
-    @Override
-    public User get(int id) throws SQLException {
-        return null;
-    }
-
-    @Override
-    public List<User> getAll() throws SQLException {
-        return null;
-    }
+    public static void addUser() {
 
-    @Override
-    public int save(User user) throws SQLException {
-        return 0;
-    }
 
-    @Override
-    public int insert(User user) throws SQLException {
-        return 0;
+        System.out.println(userData);
     }
 
-    @Override
-    public int update(User user) throws SQLException {
-        return 0;
-    }
 
-    @Override
-    public int delete(User user) {
-        return 0;
-    }
 }
Index: src/main/java/models/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package models;\r\n\r\nimport java.util.*;\r\n\r\npublic class User {\r\n    public int id;\r\n\r\n\r\n    public String username;\r\n    public String password;\r\n    public String photo;\r\n    public List<Integer> idList = new ArrayList<>();\r\n    public Map<Integer, List<Integer>> liked = new HashMap<>();\r\n\r\n    private boolean firstConstructor = false;\r\n    private boolean secondConstructor = false;\r\n    private boolean thirdConstructor = false;\r\n\r\n    public User(int id, String username, String photo, Map<Integer, List<Integer>> liked) {\r\n        this.id = id;\r\n        this.username = username;\r\n        this.photo = photo;\r\n        this.liked = liked;\r\n        firstConstructor = true;\r\n    }\r\n\r\n    public User(String username, String password) {\r\n        this.username = username;\r\n        this.password = password;\r\n        secondConstructor = true;\r\n\r\n    }\r\n    public User(int id) {\r\n        this.id = id;\r\n        thirdConstructor = true;\r\n    }\r\n\r\n    public User() {\r\n\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    public String toString() {\r\n        if (firstConstructor)\r\n            return \"models.User{\" +\r\n                    \"id=\" + id +\r\n                    \", username='\" + username + '\\'' +\r\n                    \", photo='\" + photo + '\\'' +\r\n                    \", liked='\" + liked + '\\'' +\r\n                    '}';\r\n        else if (secondConstructor)\r\n            return \"username=\" + username + '\\'' +\r\n                    \", password=\" + password;\r\n        else if (thirdConstructor)\r\n            return \"id=\" + id;\r\nelse\r\n        return null;\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean equals(Object o) {\r\n        if (this == o) return true;\r\n        if (o == null || getClass() != o.getClass()) return false;\r\n        User user = (User) o;\r\n        return id == user.id && username.equals(user.username) && photo.equals(user.photo) && liked.equals(user.liked);\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n        return Objects.hash(id, username, photo, liked);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/models/User.java b/src/main/java/models/User.java
--- a/src/main/java/models/User.java	(revision 46ead79aac2e7cc7fb8bacb9a1984ee990b9e156)
+++ b/src/main/java/models/User.java	(date 1666712819599)
@@ -11,7 +11,7 @@
     public String photo;
     public List<Integer> idList = new ArrayList<>();
     public Map<Integer, List<Integer>> liked = new HashMap<>();
-
+    public static Map<String, String> loginPass = new HashMap<>();
     private boolean firstConstructor = false;
     private boolean secondConstructor = false;
     private boolean thirdConstructor = false;
Index: src/main/java/Servlet/LoginServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Servlet;\r\n\r\nimport collections.LikeCollection;\r\nimport collections.UserCollection;\r\n\r\nimport javax.servlet.RequestDispatcher;\r\nimport javax.servlet.ServletContext;\r\nimport javax.servlet.ServletException;\r\nimport javax.servlet.http.HttpServlet;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Path;\r\nimport java.util.List;\r\n\r\npublic class LoginServlet extends HttpServlet {\r\n    LikeCollection likeCollection = new LikeCollection();\r\n    UserCollection userCollection = new UserCollection();\r\n    PeopleListServlet peopleListServlet = new PeopleListServlet();\r\n\r\n    // http://localhost:2022/login\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest rq, HttpServletResponse rs) throws ServletException, IOException {\r\n        String fileName = getClass().getClassLoader().getResource(\"login.html\").getFile();\r\n        List<String> lines = Files.readAllLines(Path.of(fileName.substring(1)));\r\n        try (PrintWriter w = rs.getWriter()) {\r\n            for (String line : lines) {\r\n                w.println(line);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n//\r\n    @Override\r\n    protected void doPost(HttpServletRequest rq, HttpServletResponse rs) throws ServletException, IOException {\r\n        try (PrintWriter w = rs.getWriter()) {\r\n            String email = rq.getParameter(\"inputEmail\");\r\n            String password = rq.getParameter(\"inputPassword\");\r\nif ()\r\n            rs.setContentType(\"text/html\");\r\n            PrintWriter pw=rs.getWriter();\r\n\r\n            rs.sendRedirect(\"http://localhost:2022/likePage\");\r\n\r\n            pw.close();\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Servlet/LoginServlet.java b/src/main/java/Servlet/LoginServlet.java
--- a/src/main/java/Servlet/LoginServlet.java	(revision 46ead79aac2e7cc7fb8bacb9a1984ee990b9e156)
+++ b/src/main/java/Servlet/LoginServlet.java	(date 1666713318858)
@@ -2,6 +2,7 @@
 
 import collections.LikeCollection;
 import collections.UserCollection;
+import models.User;
 
 import javax.servlet.RequestDispatcher;
 import javax.servlet.ServletContext;
@@ -13,13 +14,18 @@
 import java.io.PrintWriter;
 import java.nio.file.Files;
 import java.nio.file.Path;
+import java.util.HashMap;
 import java.util.List;
 
+import static java.lang.String.valueOf;
+
 public class LoginServlet extends HttpServlet {
     LikeCollection likeCollection = new LikeCollection();
     UserCollection userCollection = new UserCollection();
     PeopleListServlet peopleListServlet = new PeopleListServlet();
 
+    User user = new User();
+
     // http://localhost:2022/login
 
     @Override
@@ -34,25 +40,37 @@
     }
 
 
-
-
-//
     @Override
     protected void doPost(HttpServletRequest rq, HttpServletResponse rs) throws ServletException, IOException {
         try (PrintWriter w = rs.getWriter()) {
-            String email = rq.getParameter("inputEmail");
-            String password = rq.getParameter("inputPassword");
-if ()
+            String email = rq.getParameter("email");
+            String password = rq.getParameter("password");
+
             rs.setContentType("text/html");
-            PrintWriter pw=rs.getWriter();
+
+            PrintWriter pw = rs.getWriter();
 
-            rs.sendRedirect("http://localhost:2022/likePage");
+            if (user.loginPass.containsKey(email) && user.loginPass.get(email).equals(password)) {
+
+
+                rs.sendRedirect("http://localhost:2022/likePage");
 
-            pw.close();
+                pw.close();
+            } else if (user.loginPass.containsKey(email) && !user.loginPass.get(email).equals(password)) {
+                System.out.println("Password is wrong");
+            } else if (!user.loginPass.containsKey(email)) {
+                user.id = user.id + 4;
+                userCollection.userData.put(user.id, new HashMap() {{
+                    put(email, password);
+                }});
+                userCollection.addUser();
+                rs.sendRedirect("http://localhost:2022/likePage");
 
-        }
+            } else {
+                System.out.println("Password is wrong");
+            }
 
-
+        }
 
 
     }
Index: src/main/resources/login.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\n<!doctype html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n    <meta name=\"description\" content=\"\">\r\n    <meta name=\"author\" content=\"\">\r\n    <link rel=\"icon\" href=\"img/favicon.ico\">\r\n\r\n    <title>Signin Template for Bootstrap</title>\r\n\r\n    <!-- Bootstrap core CSS -->\r\n    <link href=\"css/bootstrap.min.css\" rel=\"stylesheet\">\r\n\r\n    <!-- Custom styles for this template -->\r\n    <link rel=\"stylesheet\" href=\"css/style.css\">\r\n</head>\r\n\r\n<body class=\"text-center\">\r\n    <form class=\"form-signin\" method=\"post\">\r\n        <img class=\"mb-4\" src=\"https://getbootstrap.com/assets/brand/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\">\r\n        <h1 class=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n        <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\r\n        <input type=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\" required autofocus>\r\n        <label for=\"inputPassword\" class=\"sr-only\">Password</label>\r\n        <input type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" required>\r\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n        <p class=\"mt-5 mb-3 text-muted\">&copy; Tinder 2018</p>\r\n    </form>\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/login.html b/src/main/resources/login.html
--- a/src/main/resources/login.html	(revision 46ead79aac2e7cc7fb8bacb9a1984ee990b9e156)
+++ b/src/main/resources/login.html	(date 1666615091624)
@@ -22,9 +22,9 @@
         <img class="mb-4" src="https://getbootstrap.com/assets/brand/bootstrap-solid.svg" alt="" width="72" height="72">
         <h1 class="h3 mb-3 font-weight-normal">Please sign in</h1>
         <label for="inputEmail" class="sr-only">Email address</label>
-        <input type="email" id="inputEmail" class="form-control" placeholder="Email address" required autofocus>
+        <input type="email" name="email" id="inputEmail" class="form-control" placeholder="Email address" required autofocus>
         <label for="inputPassword" class="sr-only">Password</label>
-        <input type="password" id="inputPassword" class="form-control" placeholder="Password" required>
+        <input type="password" name="password" id="inputPassword" class="form-control" placeholder="Password" required>
         <button class="btn btn-lg btn-primary btn-block" type="submit">Sign in</button>
         <p class="mt-5 mb-3 text-muted">&copy; Tinder 2018</p>
     </form>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"9d2c5cba-e592-47b6-b0d5-0c50488a926e\" name=\"Changes\" comment=\"Added new features\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Servlet/LoginServlet.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Servlet/LoginServlet.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/collections/UserCollection.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/collections/UserCollection.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"HTML File\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n        <option value=\"AnnotationType\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_AUTO_UPDATE\" value=\"true\" />\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2Fwj935uCeMRBJU9bMgLVAeKXuS\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/azari/IdeaProjects/SelfStudy/src/main/java/dao&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;SDKs&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;DatabaseDriversLRU&quot;: [\r\n      &quot;postgresql&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"models\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Honour\\IdeaProjects\\TinderApp\\src\\main\\resources\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\azari\\IdeaProjects\\TinderApp\\src\\main\\resources\" />\r\n      <recent name=\"C:\\Users\\azari\\IdeaProjects\\TinderApp\\templates\" />\r\n      <recent name=\"C:\\Users\\Honour\\IdeaProjects\\TinderApp\\src\\main\\resources\" />\r\n      <recent name=\"C:\\Users\\Honour\\IdeaProjects\\TinderApp\\templates\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"ServerApp\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ServerApp\" />\r\n      <module name=\"TinderApp\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.ServerApp\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"9d2c5cba-e592-47b6-b0d5-0c50488a926e\" name=\"Changes\" comment=\"\" />\r\n      <created>1665409892280</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1665409892280</updated>\r\n      <workItem from=\"1665409893680\" duration=\"331000\" />\r\n      <workItem from=\"1665495213548\" duration=\"2347000\" />\r\n      <workItem from=\"1665897394610\" duration=\"2254000\" />\r\n      <workItem from=\"1665901612802\" duration=\"3941000\" />\r\n      <workItem from=\"1665906102365\" duration=\"15454000\" />\r\n      <workItem from=\"1666090871020\" duration=\"10397000\" />\r\n      <workItem from=\"1666526687420\" duration=\"3112000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Commit and push\">\r\n      <created>1665410127947</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1665410127947</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Test Servlet\">\r\n      <created>1665413892472</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1665413892473</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Static File Servlet\">\r\n      <created>1665496540257</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1665496540257</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Static File Servlet\">\r\n      <created>1665859668706</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1665859668706</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"DAO\">\r\n      <created>1666452803823</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666452803823</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Added new features\">\r\n      <created>1666533549157</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666533549157</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Added new features\">\r\n      <created>1666533558365</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666533558365</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Added new features\">\r\n      <created>1666534544337</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666534544337</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Commit and push\" />\r\n    <MESSAGE value=\"Test Servet\" />\r\n    <MESSAGE value=\"Test Servlet\" />\r\n    <MESSAGE value=\"Static File Servlet\" />\r\n    <MESSAGE value=\"DAO\" />\r\n    <MESSAGE value=\"Added new features\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Added new features\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 46ead79aac2e7cc7fb8bacb9a1984ee990b9e156)
+++ b/.idea/workspace.xml	(date 1666713802270)
@@ -6,8 +6,11 @@
   <component name="ChangeListManager">
     <list default="true" id="9d2c5cba-e592-47b6-b0d5-0c50488a926e" name="Changes" comment="Added new features">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/ServerApp.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ServerApp.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/Servlet/LoginServlet.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Servlet/LoginServlet.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/collections/UserCollection.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/collections/UserCollection.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/models/User.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/models/User.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/login.html" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/login.html" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -56,7 +59,8 @@
     &quot;last_opened_file_path&quot;: &quot;C:/Users/azari/IdeaProjects/SelfStudy/src/main/java/dao&quot;,
     &quot;project.structure.last.edited&quot;: &quot;SDKs&quot;,
     &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.project.maven.repository.indices&quot;
   },
   &quot;keyToStringList&quot;: {
     &quot;DatabaseDriversLRU&quot;: [
@@ -113,6 +117,8 @@
       <workItem from="1665906102365" duration="15454000" />
       <workItem from="1666090871020" duration="10397000" />
       <workItem from="1666526687420" duration="3112000" />
+      <workItem from="1666587671652" duration="18002000" />
+      <workItem from="1666702402045" duration="6736000" />
     </task>
     <task id="LOCAL-00001" summary="Commit and push">
       <created>1665410127947</created>
@@ -170,7 +176,14 @@
       <option name="project" value="LOCAL" />
       <updated>1666534544337</updated>
     </task>
-    <option name="localTasksCounter" value="9" />
+    <task id="LOCAL-00009" summary="Added new features">
+      <created>1666540184962</created>
+      <option name="number" value="00009" />
+      <option name="presentableId" value="LOCAL-00009" />
+      <option name="project" value="LOCAL" />
+      <updated>1666540184962</updated>
+    </task>
+    <option name="localTasksCounter" value="10" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
